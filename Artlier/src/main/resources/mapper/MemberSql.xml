<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artlier.web.mapper.MemberMapper">

	<select id="selectAll" parameterType="Member" resultType="Member">
		SELECT
			*
		FROM
			tb_art_member
	</select>
	
	<select id="selectById" parameterType="LoginDTO" resultType="Member">
		SELECT
			*
		FROM
			tb_art_member
		WHERE
			id = #{id}
	</select>
	
	<select id="memberLogin" parameterType="LoginDTO" resultType="Member">
		SELECT
			*
		FROM
			tb_art_member
		WHERE
			id = #{id} AND pw = #{pw}
	</select>
	
	<select id="idExist" parameterType="String" resultType="int">
		SELECT COUNT(*) AS cnt FROM tb_art_member WHERE id = #{id}
	</select>
	
	<select id="selectNotificationListById" parameterType="NotificationDTO" resultType="NotificationDTO">
	
		SELECT
			*
		FROM
			(
			SELECT
				target
				,(
					CASE
						WHEN target = 'article' THEN '게시글'
						WHEN target = 'reply' THEN '댓글'
					END
				) AS target_name
				,target_mem_id
				,target_code
				,target_uid
				,target_page
				,uid
				,mem_id
				,mem_nick
				,notify_action
				,(
					CASE
						WHEN notify_action = 'REPLY' THEN '댓글'
						WHEN notify_action = 'LIKE' THEN '좋아요'
					END
				) AS notify_action_name
				,checked
				,rep_contents AS contents
			FROM
				tb_art_notification A
				LEFT JOIN
					(
					SELECT
						code
						,rep_uid
						,rep_contents
					FROM
						tb_art_board_reply
					) B
				ON
					A.target_code = B.code AND A.uid = B.rep_uid
			) AB
			LEFT JOIN
				(
				SELECT
					target_mem_id
					,count(*) AS total_count
					,count(IF(checked = 1, null, checked)) AS new_count
				FROM
					tb_art_notification
				WHERE
					target_mem_id = #{target_mem_id}
				GROUP BY
					target_mem_id
				) C
			ON
				AB.target_mem_id = C.target_mem_id
		WHERE
			AB.target_mem_id = #{target_mem_id} AND AB.mem_id != #{mem_id}
			
	</select>
	
	<select id="selectMyLoginHistory" resultType="LoginHistoryDTO">
	
		SELECT
			*
		FROM
			tb_art_login_history
		WHERE
			id = #{id}
		ORDER BY	
			try_date DESC
		LIMIT
			10
	
	</select>
	
	<select id="countMyCommonList" resultType="int">
		SELECT
			COUNT(*) AS cnt
		FROM
			tb_art_board_common_${code}
		WHERE
			id = #{memId} AND st = 0
	</select>
	
	<select id="selectMyCommonListByPage" parameterType="paginationDTO" resultType="ArticleCommon">
	
		SELECT
			*
		FROM
			(
			SELECT
				D.*
			FROM
				(
					SELECT
						C.*
					    ,IFNULL(AB.view_count, 0) AS view_count
				    	,IFNULL(AB.like_count, 0) AS like_count
					FROM
						(
							SELECT
								*
							FROM
								tb_art_board_common_${code} C
							WHERE
								st = 0
						) C
					LEFT JOIN
						(
							SELECT
								A.uid
								,A.code
		                        ,A.action AS do_view
								,A.view_count
								,B.action AS do_like
								,B.like_count
							FROM
								(
									SELECT
										uid, code, action, ip, count(*) AS view_count
									FROM
										tb_art_board_history
									WHERE 
										action = 'VIEW'
									GROUP BY
										uid
								) A
							LEFT JOIN
								(
									SELECT
										uid, code, action, mem_id, count(*) AS like_count
									FROM
										tb_art_board_history
									WHERE 
										action = 'LIKE'
									GROUP BY
										uid
								) B
							ON
								A.uid = B.uid
						) AB
					ON
						C.uid = AB.uid
				) D
			ORDER BY
				D.uid DESC
			limit
				#{pageMin}, #{articles}
			) E
		LEFT JOIN
			(
				SELECT
					article_uid, COUNT(article_uid) AS rep_count
				FROM
					tb_art_board_reply
				GROUP BY
					article_uid
			) F
		ON
			E.uid = F.article_uid
		WHERE
			id = #{id}
			
	</select>
	
	<insert id="memberJoin" parameterType="Member">
		INSERT INTO
			tb_art_member
			(
				id
				,pw
				,nick
				,join_date
			)
		VALUES
		(
			#{id}
			, #{pw}
			, #{nick}
			, NOW()
		)
	</insert>
	
	<insert id="loginHistory" parameterType="LoginHistoryDTO">
		INSERT INTO
			tb_art_login_history
			(
				uid
				,id
				,try_date
				,succeed
				,ip
			)
		VALUES
		(
			#{uid}
			, #{id}
			, NOW()
			, #{succeed}
			, #{ip}
		)
	</insert>
	
	<update id="updateNotificationChecked" parameterType="NotificationDTO">
	
		UPDATE
			tb_art_notification
		SET
			checked = 1
		WHERE
			target = #{target} AND target_code = #{target_code} AND target_uid = #{target_uid} AND uid = #{uid} AND mem_id = #{mem_id} AND notify_action = #{notify_action}
	
	</update>
	
	<update id="deleteTargetNotification" parameterType="NotificationDTO">
	
		DELETE FROM
			tb_art_notification
		WHERE
			target = #{target} AND target_code = #{target_code} AND target_uid = #{target_uid} AND uid = #{uid} AND mem_id = #{mem_id} AND notify_action = #{notify_action}
	
	</update>
	
	<update id="deleteAllNotification" parameterType="NotificationDTO">
	
		DELETE FROM
			tb_art_notification
		WHERE
			target_mem_id = #{target_mem_id}
	
	</update>

</mapper>